name: Generar Datos JSON Cliodinamicos

on:
  schedule:
    - cron: '0 8 * * 1'  # Lunes 08:00 UTC
  workflow_dispatch:

jobs:
  generate-data:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        echo "$REQUIREMENTS" > requirements.txt
        pip install -r requirements.txt
      env:
        REQUIREMENTS: |
          pandas==2.2.3
          numpy==2.1.2
          requests==2.32.3
          beautifulsoup4==4.12.3
          lxml==5.3.0
          statsmodels==0.14.4

    - name: Generate data for JSON
      run: |
        mkdir -p data
        python scripts/generar_json.py
      env:
        TEST_MODE: ${{ github.event_name == 'workflow_dispatch' && 'true' || 'false' }}  # Test mode for manual runs
      continue-on-error: false

    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      with:
        name: analysis-results
        path: data/combined_analysis_results.json
        retention-days: 7

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/combined_analysis_results.json data/cache.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-update: Cliodynamic JSON data $(date +'%Y-%m-%d') [skip ci]"
          git push origin main || echo "Failed to push changes, continuing"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
