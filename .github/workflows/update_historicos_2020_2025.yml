# scripts/obtiene_historical_data_2020_2025.yml
name: Obtener Datos Hist√≥ricos 2020-2025

description: |
  Script para obtener datos hist√≥ricos del Banco Mundial y FMI
  para los a√±os 2020-2025 y almacenarlos en un archivo JSON.

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 1 1 *'  # Ejecutar una vez al a√±o el 1 de enero a las 2:00 AM
  push:
    branches: [ main ]
    paths:
      - 'scripts/obtiene_historical_data_2020_2025.py'

jobs:
  obtener-datos-historicos:
    name: Obtener Datos Hist√≥ricos
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Instalar dependencias espec√≠ficas
      run: |
        python -m pip install --upgrade pip
        pip install requests==2.31.0 pandas==2.0.3 numpy==1.24.3
        echo "Dependencias instaladas:"
        pip list | grep -E "requests|pandas|numpy"

    - name: Verificar instalaci√≥n de dependencias
      run: |
        echo "Verificando versi√≥n de requests:"
        python -c "import requests; print(f'Requests version: {requests.__version__}')"
        echo "Verificando versi√≥n de pandas:"
        python -c "import pandas as pd; print(f'Pandas version: {pd.__version__}')"
        echo "Verificando versi√≥n de numpy:"
        python -c "import numpy as np; print(f'Numpy version: {np.__version__}')"

    - name: Crear directorio de datos
      run: |
        mkdir -p data
        echo "Directorio data creado"

    - name: Ejecutar script de obtenci√≥n de datos
      run: |
        python scripts/obtiene_historical_data_2020_2025.py
      env:
        PYTHONPATH: ${{ github.workspace }}
        MAX_RETRIES: 5
        REQUEST_TIMEOUT: 90
      timeout-minutes: 120  # Timeout extendido para las APIs

    - name: Verificar archivo generado
      run: |
        if [ -f "data/historical_data_2020_2025.json" ]; then
          echo "‚úÖ Archivo hist√≥rico generado correctamente"
          ls -la data/historical_data_2020_2025.json
          echo "Tama√±o del archivo: $(du -h data/historical_data_2020_2025.json | cut -f1)"
          echo "Estructura del archivo:"
          python -c "
          import json
          with open('data/historical_data_2020_2025.json', 'r') as f:
              data = json.load(f)
          print(f'Pa√≠ses en World Bank: {len(data.get(\"world_bank\", {}))}')
          print(f'Pa√≠ses en IMF: {len(data.get(\"imf\", {}))}')
          print(f'Fecha generaci√≥n: {data.get(\"metadata\", {}).get(\"generated_on\")}')
          "
        else
          echo "‚ùå Error: No se gener√≥ el archivo hist√≥rico"
          exit 1
        fi

    - name: Validar estructura JSON
      run: |
        python -c "
        import json
        try:
            with open('data/historical_data_2020_2025.json', 'r') as f:
                data = json.load(f)
            print('‚úÖ JSON v√°lido')
            if 'world_bank' in data and 'imf' in data and 'metadata' in data:
                print('‚úÖ Estructura correcta')
            else:
                print('‚ùå Estructura incorrecta')
                exit(1)
        except Exception as e:
            print(f'‚ùå Error en JSON: {e}')
            exit(1)
        "

    - name: Subir artefacto con datos hist√≥ricos
      uses: actions/upload-artifact@v4
      with:
        name: historical-data-2020-2025
        path: data/historical_data_2020_2025.json
        retention-days: 7

    - name: Commit y push de datos actualizados
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add data/historical_data_2020_2025.json
        git diff --staged --quiet || git commit -m "ü§ñ Actualizar datos hist√≥ricos 2020-2025 [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notificar √©xito
      if: success()
      run: |
        echo "üöÄ Proceso completado exitosamente!"
        echo "Archivo generado: data/historical_data_2020_2025.json"

    - name: Notificar fallo
      if: failure()
      run: |
        echo "‚ùå El proceso fall√≥"
        exit 1
